{"version":3,"sources":["components/Box.js","components/Grid.js","components/Buttons.js","components/Description.js","App.js","index.js"],"names":["Box","selectBox","props","row","col","className","this","boxClass","id","boxId","onClick","Component","Grid","rowsArr","i","rows","j","cols","gridFull","push","dodClass","key","style","width","Buttons","handleSelect","event","selectSpeed","ButtonToolbar","size","DropdownButton","onSelect","variant","title","Dropdown","Item","eventKey","Button","seed","playButton","pauseButton","clearButton","Description","href","App","gridCopy","JSON","parse","stringify","state","setState","Math","floor","random","playing","intervalId","setInterval","play","speed","clearInterval","grid","Array","fill","map","generation","g","ng","count","evk","newSpeed","console","log","marginTop","gridSize","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecc95841.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Box extends Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col)\n    }\n\n    render() {\n        return (\n            <div \n                className={this.props.boxClass}\n                id = {this.props.boxId}\n                onClick = {this.selectBox}\n            >\n                {/* <div className={this.props.dodClass}></div> */}\n            </div>\n        );\n    }\n}\n\nexport default Box;","import React, { Component } from 'react';\nimport Box from './Box'\n\nclass Grid extends Component {\n    render() {\n        // create a array with all the box jsx inside\n        let rowsArr = [];\n        let boxClass = '';\n        let dodClass = '';\n        for(let i = 0; i < this.props.rows; i++){\n            for(let j = 0; j < this.props.cols; j++){\n                let boxId = i + '_' + j;\n                //applay different style based on the value of the nested array\n                boxClass = this.props.gridFull[i][j] ? 'box on' : 'box off';\n                // dodClass = this.props.gridFull[i][j] ? 'display' : 'hidden';\n                rowsArr.push(\n                    <Box \n                        dodClass = {dodClass}\n                        boxClass = {boxClass}\n                        key = {boxId}\n                        boxId = {boxId}\n                        row = {i}\n                        col = {j}\n                        selectBox = {this.props.selectBox}\n                    />\n                )\n            }\n        }\n        //set the grid with by cols number * 16 since each box width is 16px\n        return (\n            <div className='grid' style={{width: this.props.cols * 14}}>\n                {rowsArr}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React, { Component } from 'react';\nimport { ButtonToolbar, DropdownButton, Dropdown, Button } from 'react-bootstrap';\n\n\nclass Buttons extends Component {\n    handleSelect = (event) => {\n        this.props.selectSpeed(event);\n    }\n    render() {\n        return (\n            <div className='center'>\n                <ButtonToolbar size=\"sm\">\n                    {/* <Buttons onClick={this.props.seed}>種を撒く</Buttons> */}\n                    <DropdownButton onSelect={this.handleSelect} variant=\"light\" id=\"dropdown-basic-button\" title=\"スピード変更\">\n                        <Dropdown.Item eventKey=\"1\">遅い</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">普通</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">速い</Dropdown.Item>\n                    </DropdownButton>\n                    <Button variant=\"success\" onClick={this.props.seed}>種を撒く</Button>\n                    <Button className=\"btn \" onClick={this.props.playButton}>スタート</Button>\n                    <Button variant=\"secondary\" onClick={this.props.pauseButton}>停止</Button>\n                    <Button variant=\"secondary\" onClick={this.props.clearButton}>クリア</Button>\n                </ButtonToolbar>\n            </div>\n        );\n    }\n}\n\nexport default Buttons;","import React, { Component } from 'react'\n\nexport default class Description extends Component {\n    render() {\n        return (\n            <div className=\"center description\">\n                <h5>ライフゲームとは</h5>\n                <p><a href=\"https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B2%E3%83%BC%E3%83%A0\">ライフゲーム</a>は1970年にイギリスの数学者ジョン・ホートン・コンウェイが考案したシミュレーションゲームで、生命の誕生、生存、過疎、過密状態を擬似的に再現しています。\n                </p>\n                <h5>ライフゲームの４つのルール</h5>\n                <ul>\n                    <li>死んでいるセルに隣接する生きたセルがちょうど3つあれば、次の世代が誕生する。</li>\n                    <li>\n                        生きているセルに隣接する生きたセルが2つか3つならば、次の世代でも生存する。</li>\n                    <li>生きているセルに隣接する生きたセルが1つ以下ならば、過疎により死滅する。</li>\n                    <li>生きているセルに隣接する生きたセルが4つ以上ならば、過密により死滅する。</li>\n                </ul>\n                <p className=\"game-rule\">※種はすでにランダムにフィールド上に撒いており、ゲームは「スタートボタンで開始できます。<br></br>\n                手動でセルをクリックすることで種を撒くことも可能です。<br></br>\n                「スピード変更」から世代交代の速度を調整することができます。</p>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Grid from './components/Grid';\nimport './App.css';\nimport Buttons from './components/Buttons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Description';\nimport Description from './components/Description';\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    //define the speed & rows & cols for the grid\n    this.intervalId = null;\n    this.speed = 500;\n    this.rows = 35;\n    this.cols = 40;\n    this.playing = false;\n    //define the state for the App component\n    this.state = {\n      speed: 500,\n      generation : 0,\n      gridFull: Array(this.rows).fill().map(()=> Array(this.cols).fill(false))\n    }\n  }\n\n  //define the function for the box being selected \n  //toggle the selected box\n  selectBox = (row, col) => {\n    let gridCopy = JSON.parse(JSON.stringify(this.state.gridFull));\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull :   gridCopy\n    })\n  }\n\n  //define the function to put random seed into the world\n  seed = () => {\n    let gridCopy = JSON.parse(JSON.stringify(this.state.gridFull));\n    for(let i = 0; i < this.rows; i++){\n      for(let j = 0; j < this.cols; j++){\n        if(Math.floor(Math.random()*6) === 1){\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull : gridCopy,\n    })\n  }\n\n  //play the game\n  playButton = () => {\n    if(!this.state.playing){\n      this.setState({\n        playing: true\n      })\n      this.intervalId = setInterval(()=>{\n        this.play();\n      }, this.state.speed);\n    }\n  }\n  //pause the game\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n    this.setState({\n      playing: false\n    })\n  }\n  //clear the game\n  clearButton = () => {\n    clearInterval(this.intervalId);\n    let grid = Array(this.rows).fill().map(()=> Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0,\n      playing: false,\n    })\n  }\n  //play function\n  play = () => {\n    let g = this.state.gridFull;\n    let ng = JSON.parse(JSON.stringify(this.state.gridFull));\n    for(let i = 0; i < this.rows; i++){\n      for(let j = 0; j < this.cols; j++){\n        let count = 0;\n        if(i > 0 && j > 0)                            if(g[i - 1][j - 1]) count++; //top left\n        if(i > 0)                                     if(g[i - 1][j]) count++; // top middle\n        if(i > 0 && j < this.cols - 1)                if(g[i - 1][j + 1]) count++; //top right\n        if(j > 0)                                     if(g[i][j - 1]) count++; //middle left\n        if(j < this.cols - 1)                         if(g[i][j + 1]) count++; //middle right\n        if(i < this.rows - 1 && j > 0)                if(g[i + 1][j - 1]) count++; //down left\n        if(i < this.rows - 1)                         if(g[i + 1][j]) count++; //down middle\n        if(i < this.rows - 1 && j < this.cols - 1)    if(g[i + 1][j + 1]) count++;\n        //\n        if(g[i][j] && (count < 2 || count > 3)) ng[i][j] = false;\n        if(!g[i][j] && count === 3) ng[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull : ng,\n      generation: this.state.generation + 1\n    })\n  }\n\n  selectSpeed = (evk) => {\n    this.pauseButton();\n    let newSpeed;\n    switch(evk){\n      case \"1\":\n        newSpeed = 1000;\n        this.setState({\n          speed : newSpeed\n        })\n        break;\n      case \"2\":\n        newSpeed = 500;\n        this.setState({\n          speed : newSpeed\n        })\n        break;\n      case \"3\":\n        newSpeed = 300;\n        this.setState({\n          speed : newSpeed\n        })\n        break;\n      default:\n        break;\n    }\n    console.log(this.state.speed)\n  }\n\n  componentDidMount(){\n    this.seed();\n    // this.playButton();\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {/* title for the game */}\n        <h1 style={{marginTop: \"30px\"}}>ライフゲーム</h1>\n        {/* the main grid section */}\n        <Grid \n          gridFull = {this.state.gridFull}\n          rows = {this.rows}\n          cols = {this.cols}\n          selectBox = {this.selectBox}\n        />\n        {/* how many generation is there */}\n        <h4 style={{marginTop: \"10px\"}}>世代: {this.state.generation}</h4>\n        <Buttons \n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          selectSpeed={this.selectSpeed}\n          clearButton={this.clearButton}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Description />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}